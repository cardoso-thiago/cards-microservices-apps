{
	"info": {
		"_postman_id": "d0bf3e4a-cca1-4256-a772-5ed0ad9a5373",
		"name": "Mastertech",
		"description": "# Introdução\nAPI para o sistema de cartões\n\n# Overview\nSistema de testes criado no curso da Mastertech",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Customers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/cliente",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"cliente"
					]
				},
				"description": "Request para obter todos os clientes."
			},
			"response": []
		},
		{
			"name": "Post Customer Wrong Validation",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/cliente",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"cliente"
					]
				},
				"description": "Request para criar um novo cliente, deve dar erro de validação do campo."
			},
			"response": []
		},
		{
			"name": "Post Customer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nome\": \"Leonardo Fibonacci\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/cliente",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"cliente"
					]
				},
				"description": "Adiciona um novo cliente."
			},
			"response": []
		},
		{
			"name": "Get Customer by id Wrong Validation",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/cliente/X",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"cliente",
						"X"
					]
				},
				"description": "Request para obter um cliente pelo id, deve dar erro de validação do campo."
			},
			"response": []
		},
		{
			"name": "Get Customer by id Not Exists",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/cliente/123456789",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"cliente",
						"123456789"
					]
				},
				"description": "Request para obter um cliente que não existe. Deve retornar mensagem informativa."
			},
			"response": []
		},
		{
			"name": "Get Customer by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/cliente/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"cliente",
						"3"
					]
				},
				"description": "Request para obter um cliente por id."
			},
			"response": []
		},
		{
			"name": "Get All Cards",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao"
					]
				},
				"description": "Request para obter todos os cartões cadastrados."
			},
			"response": []
		},
		{
			"name": "Get Card by id  Wrong Validation",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao/id/X",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"id",
						"X"
					]
				},
				"description": "Request para obter o cartão pelo id. Deve retornar erro de validação do campo."
			},
			"response": []
		},
		{
			"name": "Get Card by id Not Exists",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao/id/123456",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"id",
						"123456"
					]
				},
				"description": "Request para obter o cartão pelo id. Deve retornar que o cartão não existe."
			},
			"response": []
		},
		{
			"name": "Get Card by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao/id/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"id",
						"1"
					]
				},
				"description": "Request para obter o cartão pelo id."
			},
			"response": []
		},
		{
			"name": "Post Card",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numero\": \"112358132134\",\n    \"clienteId\": 3\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cartao",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao"
					]
				},
				"description": "Request para criar um novo cartão associado a um cliente que existe."
			},
			"response": []
		},
		{
			"name": "Get Card by id Created",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao/id/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"id",
						"3"
					]
				},
				"description": "Request para obter o cartão pelo id recém criado."
			},
			"response": []
		},
		{
			"name": "Post Card Duplicated Error",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numero\": \"112358132134\",\n    \"clienteId\": 3\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cartao",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao"
					]
				},
				"description": "Request para criar um cartão com o mesmo número que foi criado anteriormente. Deve retornar erro informando que o cartão já foi cadastrado."
			},
			"response": []
		},
		{
			"name": "Post Payment Deactivated Error",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cartao_id\": 3,\n    \"descricao\": \"Compra de Cerveja\",\n    \"valor\": 10.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/pagamento",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"pagamento"
					]
				},
				"description": "Request para criar um pagamento no cartão. Deve retornar informando que o cartão está desativado."
			},
			"response": []
		},
		{
			"name": "Patch Card Activation",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ativo\": true\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cartao/112358132134",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"112358132134"
					]
				},
				"description": "Request para ativar um cartão."
			},
			"response": []
		},
		{
			"name": "Get Card by number Not Exists",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao/123456789101212",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"123456789101212"
					]
				},
				"description": "Request para obter um cartão pelo número. Deve retornar informando que o cartão não existe."
			},
			"response": []
		},
		{
			"name": "Get Card by number",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cartao/112358132134",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cartao",
						"112358132134"
					]
				},
				"description": "Request para obter um cartão pelo número."
			},
			"response": []
		},
		{
			"name": "Post Payment Wrong Validations",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cartao_id\": 3,\n    \"descricao\": \"\",\n    \"valor\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/pagamento",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"pagamento"
					]
				},
				"description": "Request para inserir um pagamento. Deve retornar uma lista de erros de validação."
			},
			"response": []
		},
		{
			"name": "Post Payment Card Not Exists",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cartao_id\": 123456,\n    \"descricao\": \"Compra de Cerveja\",\n    \"valor\": 10.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/pagamento",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"pagamento"
					]
				},
				"description": "Request para criar um pagamento. Deve retornar que o cartão não existe."
			},
			"response": []
		},
		{
			"name": "Post Payment",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cartao_id\": 3,\n    \"descricao\": \"Compra de Cerveja\",\n    \"valor\": 10.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/pagamento",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"pagamento"
					]
				},
				"description": "Request para criar um pagamento. "
			},
			"response": []
		},
		{
			"name": "Get Invoice  Wrong Validation",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/X/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"X",
						"3"
					]
				},
				"description": "Request para obter a fatura. Deve retornar erro de validação do campo."
			},
			"response": []
		},
		{
			"name": "Get Invoice Customer Not Exists",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/123456/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"123456",
						"3"
					]
				},
				"description": "Request para obter a fatura. Deve retornar que o cliente não existe."
			},
			"response": []
		},
		{
			"name": "Get Invoice Card Not Exists",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/3/123456",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"3",
						"123456"
					]
				},
				"description": "Request para obter a fatura. Deve retornar que o cartão não existe."
			},
			"response": []
		},
		{
			"name": "Get Invoice",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/3/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"3",
						"3"
					]
				},
				"description": "Request para obter a fatura."
			},
			"response": []
		},
		{
			"name": "Post Pay Invoice Wrong Validation",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/X/3/pagar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"X",
						"3",
						"pagar"
					]
				},
				"description": "Request para pagar a fatura. Deve retornar erro de validação do campo."
			},
			"response": []
		},
		{
			"name": "Post Pay Invoice Customer Not Exists",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/123456/3/pagar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"123456",
						"3",
						"pagar"
					]
				},
				"description": "Request para pagar a fatura. Deve retornar informando que o cliente não existe."
			},
			"response": []
		},
		{
			"name": "Post Pay Invoice Card Not Exists",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/3/123456/pagar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"3",
						"123456",
						"pagar"
					]
				},
				"description": "Request para pagar a fatura. Deve retornar informando que o cartão não existe."
			},
			"response": []
		},
		{
			"name": "Post Pay Invoice",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/3/3/pagar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"3",
						"3",
						"pagar"
					]
				},
				"description": "Request para pagar a fatura."
			},
			"response": []
		},
		{
			"name": "Post Expire Card Wrong Validation",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/X/3/expirar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"X",
						"3",
						"expirar"
					]
				},
				"description": "Request para expirar o cartão do cliente. Deve retornar erro de validação do campo."
			},
			"response": []
		},
		{
			"name": "Post Expire Card Customer Not Exists",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/123456/3/expirar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"123456",
						"3",
						"expirar"
					]
				},
				"description": "Request para expirar o cartão do cliente. Deve retornar que o cliente não existe."
			},
			"response": []
		},
		{
			"name": "Post Expire Card Not Exists",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/3/123456/expirar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"3",
						"123456",
						"expirar"
					]
				},
				"description": "Request para expirar o cartão do cliente. Deve retornar que o cartão não existe."
			},
			"response": []
		},
		{
			"name": "Post Expire Card",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/fatura/3/3/expirar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"fatura",
						"3",
						"3",
						"expirar"
					]
				},
				"description": "Request para expirar o cartão do cliente."
			},
			"response": []
		},
		{
			"name": "Post Payment Expired Error",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cartao_id\": 3,\n    \"descricao\": \"Compra de Cerveja\",\n    \"valor\": 10.5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/pagamento",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"pagamento"
					]
				},
				"description": "Request para criar um pagamento. Deve retornar informando que o cartão está expirado."
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}